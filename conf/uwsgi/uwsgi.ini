[uwsgi]
# 使用nginx连接时使用，必须和nginx配置相同
socket = 127.0.0.1:3031
# 直接做web服务器使用，flask程序所在服务器地址 
# http = 0.0.0.0:8000   
# 项目根目录
chdir = /usr/share/nginx/www/redian.gli.cn/hotspot_v1.2
# 项目运行文件
wsgi-file = %(chdir)/manage.py
# 是否需要主进程
master = true
# 项目名称
callable = app
# 以守护进程方式启动
vacuum = true
# 启用线程
enable-threads = true
# 进程数
processes = 4
# 线程数
threads = 2
# 排队请求数
listen = 1024
# 监视uwsgi状态
stats = 127.0.0.1:9191
# 不记录request日志，只记录错误日志
disable-logging = true
# 代码修改后自动重启 只在开发时使用
# python-autoreload = 1
# 虚拟环境目录地址
virtualenv = /root/.virtualenv/redian
# 显示各进程状态
stats = %(chdir)/conf/uwsgi/uwsgi.status
# 存放进程编号的文件
pidfile=%(chdir)/conf/uwsgi/uwsgi.pid
# 设置最大日志文件大小
log-maxsize = 5000000
# uwsgi日志
daemonize = %(chdir)/conf/uwsgi/uwsgi.log
uwsgi_read_timeout=1000
# 一个请求花费的时间超过了这个harakiri超时时间，那么这个请求都会被丢弃，并且当前处理这个请求的工作进程会被回收再利用（即重启）
harakiri = 1200
# 设置用于uwsgi包解析的内部缓存区大小为64k。默认是4k
buffer-size = 65535


# 注意：服务器502时，就是请求处理不过来，需要增加woker；服务器504时，就是请求超时，需要增加timeout